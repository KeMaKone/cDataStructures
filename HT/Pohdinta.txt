Avaimien löytymisestä ja lisäilyistä katso itse ohjelma HT.c

Binäärisen hakupuun aikakompleksituus O(log(n)) ja aikamittausten jälkeen sanoisin ohjelman olevan samassa kompleksisuusluokassa.

Puusta voidaan poistaa solmuja kolmella tyylillä.
Jos poistettava solmu on juuri niin voi vaan poistaa.
Jos poistettavalla solmulla on 1 lapsi linkitetään lapsi poistettavan solmun isään.
Jos poistettavalla solmulla on 2 lasta, etsitään poistettavaa avainta numeerisesti lähin avain ja korvataan poistettava avain sillä.
Poistojen jälkeen on AVL-puu tasapainoitettava.

Millaiseksi puu muodostuu, kun poistat avaimen 4?
Vaihe 0: Itse puu
         8,1
     _____|______
    |            |
    4,0         12,1
 ___|___      ___|___
|      |     |       |
2,0   6,0   10,1   28,0
                  ___|___
                 |       |
               14,0      30,0
                
Vaihe 1: Poistaminen
         8,0
     _____|_____
    |           |
    2,1       12,1
    |___     ___|___
        |   |       |
       6,0 10,1   28,0
                 ___|___
                |       |
                14,0  30,0